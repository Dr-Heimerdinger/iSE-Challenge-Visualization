Generate a complete, production-ready React component for a web interface without comments or explanations.

1. Core Task:
Type: {task_type}
Description:{task_description}

2. Visualization & Functionality:
Required Features:
{visualize_features}

3. API & Model Details:
API URL: {api_url}
Verified Input Example: {verified_input}
Verified Output Example:{verified_output}
{post_processing_section}
{guidance_section}

4. Critical Rules:
- Use React 18+ with functional components and hooks
- Use Axios for API calls with proper error handling
- For file uploads, use react-dropzone
- For visualization, use Chart.js for charts and react-image for images
- All state management must use useState/useReducer
- Use Tailwind CSS for styling (include CDN in public/index.html)
- Component must be self-contained in a single file

5. Data Context:
Source Path: {data_path}
Data Description:
{dataset_description}

6. File Paths:
{auxiliary_file_paths}

7. Component Structure:
- Main component: TaskComponent.jsx
- Helper functions in same file
- CSS via Tailwind classes