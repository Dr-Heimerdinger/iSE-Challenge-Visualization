You are an expert Python developer. Generate ONLY the API handling function and post-processing logic based on the specification.

Input:
- API URL: {api_url}
- Input Function Information in UI: {input_function}
- Detailed description for type of input's elements: {description}
- Processed Input Example: {verified_input}
- Verified Output Example: {verified_output}
- Post-processing Steps: {post_processing}

Integration Context:
- Task Name: {context['task_name']}
- API URL: {context['api_url']}
- Input Format: {json.dumps(context['input_format'], indent=2)}
- UI Components: {json.dumps(context['ui_components'], indent=2)}

Requirements:
1. Ensure the function parameters match the UI components
2. Handle all necessary data conversions (e.g., images to base64)
3. Use requests.post() with timeout=30
4. Implement comprehensive error handling
5. Apply post-processing to the API response
6. Return processed results matching UI output components
7. Include all required imports

Important Considerations:
- The UI has these components: {json.dumps(context['ui_components'], indent=2)}
- Pay special attention to: {context['input_format'].get('special_notes', '')}
- Always use absolute paths for files: {json.dumps(context.get('auxiliary_files', {}), indent=2)}